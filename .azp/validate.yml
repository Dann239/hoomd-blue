# Trigger on PRs into stable branches. These builds take a significant amount of time. In the Azure
# Pipelines web UI, this pipeline is set to require a team member's request before building. Add a
# PR comment `/azp run validate` to run this pipeline.
pr:
  - maint
  - master

# Do not trigger on every push. This runs every commit twice for PRs with branches on the main
# repository.
trigger: none

variables:
  image_root: glotzerlab/ci:2021.03

  # Default build parameters, will override as needed with job matrix values. Variables are
  # automatically set as environment variables (with names converted to all caps). These variables
  # are used throughout the azure pipelines configuration (such as in build.yml) and implicitly by
  # applications that respond to environment variables.
  enable_gpu: off
  enable_mpi: off
  enable_tbb: off
  build_validation: off
  build_jit: off
  omp_num_threads: '2'
  llvm_version: '6.0'
  build_testing: on
  always_use_managed_memory: off
  mpiexec_timeout: 3000

stages:
- stage: build_test_cpu2
  displayName: Unit test (CPU)
  dependsOn: []

  jobs:
  - job: linux_cpu
    displayName: Linux
    timeoutInMinutes: 75

    strategy:
      matrix:
        clang10_py38_mpi_tbb:
          container_image: clang10_py38
          enable_mpi: on
          enable_tbb: on
          build_jit: on
          llvm_version: '10'

        gcc10_py39_mpi_tbb:
          container_image: gcc10_py39
          enable_mpi: on
          enable_tbb: on

        gcc9_py38_mpi_tbb:
          container_image: gcc9_py38
          enable_mpi: on
          enable_tbb: on

        clang9_py38_mpi_tbb:
          container_image: clang9_py38
          enable_mpi: on
          enable_tbb: on
          build_jit: on
          llvm_version: '9'

        clang8_py38_mpi_tbb:
          container_image: clang8_py38
          enable_mpi: on
          enable_tbb: on
          build_jit: on
          llvm_version: '8'

        clang7_py38_mpi_tbb:
          container_image: clang7_py38
          enable_mpi: on
          enable_tbb: on
          build_jit: on
          llvm_version: '7'

        gcc8_py37_mpi_tbb:
          container_image: gcc8_py37
          enable_mpi: on
          enable_tbb: on

        gcc7_py37_tbb:
          container_image: gcc7_py37
          enable_tbb: on

        clang6_py37_mpi_tbb:
          container_image: clang6_py37
          enable_mpi: on
          enable_tbb: on
          build_jit: on
          llvm_version: '6.0'

        gcc7_py36:
          container_image: gcc7_py36

    pool:
      vmImage: 'ubuntu-latest'

    container:
      image: $(image_root)-$(container_image)
      options: -u 0

    steps:
    - checkout: self
      submodules: true
    - template: templates/build.yml
    - template: templates/run_tests.yml

  - job: mac_cpu
    displayName: macOS
    timeoutInMinutes: 75

    strategy:
      matrix:
        10_14:
          mac_image: macOS-10.14
        10_15_mpi_tbb:
          mac_image: macOS-10.15
          enable_mpi: on
          enable_tbb: on

    pool:
      vmImage: '$(mac_image)'

    steps:
    - checkout: self
      submodules: true
    - bash: sudo chown -R $USER $CONDA
      displayName: Take ownership of conda installation
    - script: $CONDA/bin/conda env create --quiet --prefix=$(Pipeline.Workspace)/conda --file .azp/environment.yml
      displayName: Create conda environment
    - bash: echo "##vso[task.prependpath]$(Pipeline.Workspace)/conda/bin"
      displayName: Add conda to PATH
    - template: templates/build.yml
    - template: templates/run_tests.yml

- stage: build_test_nvidia2
  displayName: Unit test (NVIDIA GPU)
  dependsOn: []
  variables:
    enable_gpu: on

  jobs:
  - job: linux_gpu
    displayName: Linux
    timeoutInMinutes: 75

    strategy:
      matrix:
        cuda11_py38_mng_mpi:
          container_image: cuda11_gcc9_py38
          always_use_managed_memory: on
          enable_mpi: on

        cuda10_py37:
          container_image: cuda10_gcc7_py37

    pool:
      name: 'GPU'

    container:
        image: $(image_root)-$(container_image)
        options: -u 0 --gpus=all -e CUDA_VISIBLE_DEVICES

    workspace:
      clean: all

    steps:
    - checkout: self
      submodules: true
    - template: templates/build.yml
    - template: templates/run_tests.yml

- stage: build_validate_cpu
  displayName: Validate (CPU)
  dependsOn: []
  variables:
    mpiexec_timeout: 20000
    build_testing: off

  jobs:
  - job: vld_linux_cpu
    displayName: Linux
    timeoutInMinutes: 350

    strategy:
      matrix:
        clang11_py39_mpi_tbb2:
          container_image: clang11_py39
          enable_mpi: on
          enable_tbb: on
          build_jit: on
          llvm_version: '9.0'

        clang11_py39_mpi_tbb1:
          container_image: clang11_py39
          enable_mpi: on
          enable_tbb: on
          build_jit: on
          llvm_version: '9.0'
          omp_num_threads: '1'

        clang11_py39_mpi:
          container_image: clang11_py39
          enable_mpi: on
          build_jit: on
          llvm_version: '9.0'

        clang11_py39:
          container_image: clang11_py39
          enable_mpi: off
          build_jit: on
          llvm_version: '9.0'

    pool:
      vmImage: 'ubuntu-latest'

    container:
      image: $(image_root)-$(container_image)
      options: -u 0

    steps:
    - checkout: self
      submodules: true
    - template: templates/build.yml
    - template: templates/run_validation_tests.yml

- stage: build_validate_nvidia
  displayName: Validate (NVIDIA GPU)
  dependsOn: []
  variables:
    enable_gpu: on
    mpiexec_timeout: 20000
    build_testing: off

  jobs:
  - job: vld_linux_gpu
    displayName: Linux
    timeoutInMinutes: 360

    strategy:
      matrix:
        cuda11_py38_mpi:
          container_image: cuda11_gcc9_py38
          enable_mpi: on

    pool:
      name: 'GPU'
      demands: dual_gpu

    container:
       image: $(image_root)-$(container_image)
       options: -u 0 --gpus=all -e CUDA_VISIBLE_DEVICES

    workspace:
      clean: all

    steps:
    - checkout: self
      submodules: true
    - template: templates/build.yml
    - template: templates/run_validation_tests.yml
